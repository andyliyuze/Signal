<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title></title>

    <link href="../Scripts/bootstrap.min.css" rel="stylesheet" />


    <link href="../Css/Chat.css" rel="stylesheet" />
    <script src="../Scripts/jquery-2.0.0.min.js"></script>

    <script src="../Scripts/bootstrap.min.js"></script>


    <!--Script references. -->
    <!--Reference the jQuery library. -->
    <!--Reference the SignalR library. -->

    <script src="../Scripts/jquery.signalR-2.2.0.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="/signalr/js"></script>

    <script type="text/javascript">


        $(function () {

          //  setScreen(false);

            //      Declare a proxy to reference the hub.
            var userHub = $.connection.userHub;
            var chatHub = $.connection.chatHub;

            registerClientMethods(chatHub, userHub);

            // Start Hub
            $.connection.hub.start().done(function () {
                //  registerStartChatEvents(chatHub);
                console.log("连接完成");
                registerEvents(chatHub, userHub);

            });

            $.connection.hub.disconnected(function () {
                console.log("正在尝试重新连接");
                setTimeout(function () {
                    $.connection.hub.start().done(function () {
                        console.log("连接完成");
                        registerEvents(chatHub, userHub);
                    });
                }, 5000); // Restart connection after 5 seconds.
            });
        });

        function setScreen(isLogin) {

            if (!isLogin) {

                $("#divChat").hide();
                $("#divLogin").show();
            }
            else {

                $("#divChat").show();
                $("#divLogin").hide();
            }

        }
        //废弃的
        function registerStartChatEvents(chatHub, userHub) {
            $("#btnStartChat").click(function () {



                var flag = $.connection.hub.state == 4
                if (flag) {
                    $.connection.hub.start().done(function () {

                        registerEvents(chatHub)

                    });
                }
                var name = $("#txtNickName").val();
                var pwd = $("#pwd").val().trim();
                if (name.length > 0 && pwd.length > 0) {
                    chatHub.server.connect(name, pwd);
                }
                else {
                    alert("用户名或密码不能为空");
                }

            });
        }
        function registerEvents(chatHub, userHub) {
            $("#divChatWindow").scroll(function () {
                //    $(document).on('scroll', "#divChatWindow", function () {

                var d = $("#divChatWindow").scrollTop();
                if (d == 0) {
                    waterallowData();

                    chatHub.server.getLastMessage();

                }
                else { $('.waterfllow-loading').removeClass('active'); }
            });
            $("#btnStartChat").click(function () {




                var name = $("#txtNickName").val();
                var pwd = $("#pwd").val().trim();
                if (name.length > 0 && pwd.length > 0) {
                    chatHub.server.connect(name, pwd);
                }
                else {
                    alert("用户名或密码不能为空");
                }

            });

            //群发消息
            $('#btnSendMsg').click(function () {

                var msg = $("#txtMessage").val();
                if (msg.length > 0) {

                    var userName = $('#hdUserName').val();
                    chatHub.server.sendMessageToAll(userName, msg);
                    $("#txtMessage").val('');
                }
            });


            $("#txtNickName").keypress(function (e) {
                if (e.which == 13) {
                    $("#btnStartChat").click();
                }
            });

            $("#txtMessage").keypress(function (e) {
                if (e.which == 13) {
                    $('#btnSendMsg').click();
                }
            });
            // Send Button event
            //私信消息
            $(".btn_send").click(function () {
                var RecevierId = $("#currentUserName").attr("data-uid");
                var msg = $("#txtPrivateMessage").text();
                var SenderName = $("#hdUserName").text();
                var SenderId = $("#hdUserName").attr("data-uid").trim();
                var message = new Object();
                message.SenderId = SenderId;
                message.SenderName = SenderName;
                message.RecevierId = RecevierId;
                message.content = msg;
                var time = new Date();
                message.CreateTime = time;
                if (msg.length > 0) {
                    $("#txtPrivateMessage").text("");
                    //将消息push进Storage，本地存储
                    var key = "MessageListWith_" + message.RecevierId;
                    PushSeesionStorage(key, message);
                    //将消息绑定要页面显示，前端
                    AddMessage(message);
                    //好友列表出也要绑定最新消息以及时间
                    $("#ul_item_" + RecevierId + "").find(".ext:eq(0)").text(getTime(message.CreateTime));
                    $("#ul_item_" + RecevierId + "").find(".chat_item_info p.msg").find("span:eq(0)").text(message.content);
                    //将消息发送到后台处理
                    chatHub.server.sendPrivateMessage(message);


                }
                else { alert("不能发送空消息"); return; }
            });

            //点击查看好友申请的item
            $(document).on('click', '.apply_ul_item', function (e) {
                var Applys = GetSeesionStorageList("FriendsApplys");

                $(".list-group.friendsApply li").remove();
                if ($("#friendsapplyModal").length <= 0) {

                    $("#modal").load("/User/FriensApplysPage", function (response, status, xhr) {
                        bindingApplys(Applys);
                        $("#friendsapplyModal").modal('show');
                    });
                }
                else {
                    bindingApplys(Applys);
                    $("#friendsapplyModal").modal('show');

                }


            });
            //点击用户时绑定用户名和id
            $(document).on('click', '.chat_ul_item', function () {
                if (IsCurrentUserOrNotUser(this)) { return; }
                //获取当前用户用户名
                var username = $(this).find(".nickname_text").text();
                //更改聊天窗口的用户名
                $("#currentUserName").text(username);
                //获取当前聊天用户的Id
                var id = $(this).attr("data-uid");
                //更改聊天窗口的用户Id
                $("#currentUserName").attr("data-uid", id);
                //清空聊天对话框的消息
                $(".message_ul .message_item ").remove();
                if ($(this).hasClass("NeedGetMsgFromBack")) {
                    //清楚需要从后台获取数据的标识
                    $(this).removeClass("NeedGetMsgFromBack");
                    //
                    var MsgId = $(this).attr("data-unreadMsgId");
                    //如果存在未读消息，则从去后台获取未读消息数据
                    var unreadcount = $(this).attr("data-unreadcount");
                    //  unreadcount = getNum(unreadcount);
                    if (unreadcount > 0) {
                        chatHub.server.getUnreadMsg(id, MsgId, unreadcount).done(function () {
                            //将浏览器的本地缓存消息加载到聊天窗口中
                            GetStrogeMessage(id);

                        });
                    }
                }
                else {
                    //将浏览器的本地缓存消息加载到聊天窗口中
                    GetStrogeMessage(id);
                }


                ////如果存在未读消息，则从去后台获取未读消息数据
                //var unreadcount = $(this).find("span.unreadcount").text();
                //unreadcount = getNum(unreadcount);
                //if (unreadcount > 0) {
                //    chatHub.server.getUnreadMsg(id, unreadcount);
                //    //让未读条数变为0，前端
                //    $("#ul_item_" + id + "").find(".chat_item_info p.msg span.unreadcount").remove();
                //}

                //让未读标志的红点消失
                $(this).find("i.icon").removeClass("web_wechat_reddot");
                //让未读条数变为0，前端
                $("#ul_item_" + id + "").find(".chat_item_info p.msg span.unreadcount").remove();


            });
            //点击+号弹出搜索弹框
            $("#AddUser").click(function () {

                if ($("#myModal").length <= 0) {
                    $("#modal").load("/User/SearchUserPage", function (response, status, xhr) {
                        $("#myModal").modal('show');

                    });
                }
                else {

                    $("#myModal").modal('show');
                }

                $(".searchresult_info").hide();
                $("#searchVal").val("");
            });
            //searchBtn
            $(document).on('click', "#searchBtn", function () {
                var name = $("#searchVal").val();

                userHub.server.searchUser(name);
            });

            $(document).on('click', "#sendreply", function () {

                var applyUid = $("#hdUserName").attr("data-uid");
                var recevieUid = $("#searchresult_uid").val();

                userHub.server.sendAddFriendsReply(applyUid, recevieUid);
            });


            //点击好友申请的的消息
            $(document).on('click', ".friendsapply", function () {
                var key = "FriendsApplys";

                listStr = sessionStorage.getItem(key, listStr);
                //将数组序列化为字符串
                listStr = JSON.stringify(FriendsApplys);
                //将获得的listStr反序列化为list
                var list = [];
                if (listStr != null) {
                    // 将字符串反序列化为消息数组
                    list = JSON.parse(listStr);
                }

                for (var item in list) {

                }
            });
            //通过申请按钮
            $(document).on('click', '.reply-pass', function () {
                var applyuid = $(this).parent().parent(".list-group-item").find(".reply-name").attr("data-uid");
                var ReceiverUserId = $("#hdUserName").attr("data-uid");
                var ApplyId = $(this).parent().parent(".list-group-item").find(".reply-name").attr("data-applyid");


                userHub.server.beFriend(applyuid, ReceiverUserId, ApplyId);



            });

        }

        function registerClientMethods(chatHub, userHub) {

            // Calls when user successfully logged in
            chatHub.client.onConnected = function (user, allUsers, hisMsglist, FriendsApplys) {

                setScreen(true);

                //$(".message").remove();
                //$(".user").remove();

                $('#hdUserName').attr("data-uid", user.UserDetailId);
                $('#hdUserName').text(user.UserName);
                $("#myheadsrc").attr("data-uid", user.Id);
                $("#myheadsrc").attr("src", user.AvatarPic);
                // Add All Users
                for (i = 0; i < allUsers.length; i++) {

                    AddUser(allUsers[i].UserDetailId, allUsers[i].UserName, allUsers[i].AvatarPic, allUsers[i].IsOnline);
                }
                for (i = 0; i < hisMsglist.length; i++) {
                    bindingMsg(hisMsglist[i]);

                }
                if (FriendsApplys.length > 0) {
                    //将数据缓存到SeesionStorage
                    for (var i = 0; i < FriendsApplys.length; i++) {
                        PushSeesionStorage("FriendsApplys", FriendsApplys[i]);
                    }
                    var id = "Applys";
                    var name = "添加申请";

                    var avatarPic = "Images/usericon.jpg";
                    var IsOnline = true;
                    AddUser(id, name, avatarPic, IsOnline)
                    //   bindingApplys(FriendsApplys);
                }
            }

            // On New User Connected
            chatHub.client.onNewUserConnected = function (uid, name) {
                alert("有人来啦");
                UserIsOnlined(uid);
                //AddUser(chatHub, id, name);
            }


            // On User Disconnected
            chatHub.client.onUserDisconnected = function (id, userName) {
                alert(userName + "下线啦！");
                $("#img_" + id + "").addClass("gray");

            }
            //接收后台传来的单条消息
            //废弃的
            chatHub.client.messageReceived = function (userName, message) {
                var key = "MessageListWith_" + message.SenderId;
                PushSeesionStorage(key, message);
                AddMessage(userName, message);
            }
            //接收后台传来的消息集合
            chatHub.client.messageListReceived = function (MessageList) {
                for (var i = 0; i < MessageList.length; i++) {
                    //将消息push进Storage，本地存储
                    var key = "MessageListWith_" + MessageList[i].SenderId;
                    PushSeesionStorage(key, MessageList[i]);
                    AddMessage(MessageList[i]);

                }

            }

            //接收后台传来的单条消息
            chatHub.client.receivePrivateMessage = function (message) {

                var uid = message.SenderId;
                //将消息push进Storage，本地存储
                var key = "MessageListWith_" + message.SenderId;
                PushSeesionStorage(key, message);

                //绑定消息在聊天对话框框
                if (message.SenderId.trim() == $("#currentUserName").attr("data-uid").trim()) {

                    AddMessage(message);
                    $("#ul_item_" + uid + "").find(".ext:eq(0)").text(getTime(message.CreateTime));
                    $("#ul_item_" + uid + "").find(".chat_item_info p.msg").find("span:eq(0)").text(message.content);
                    return;
                }
                //绑定消息在好友列表处,之前已存在未读
                if ($("#ul_item_" + uid + "").find(".avatar .icon").hasClass("web_wechat_reddot")) {
                    var $unreadText = $("#ul_item_" + uid + "").find(".chat_item_info p.msg").find(".unreadcount");
                    var unreadcount = $unreadText.text();
                    unreadcount = eval(getNum($unreadText.text())) + 1;
                    $unreadText.text("[" + unreadcount + "条]");

                    $("#ul_item_" + uid + "").find(".ext:eq(0)").text(getTime(message.CreateTime));
                    $("#ul_item_" + uid + "").find(".chat_item_info p.msg").find("span:eq(1)").text(message.content);
                    return;
                }
                    //绑定消息在好友列表处，之前不存在未读消息
                else {
                    //先请掉之前的消息
                    $("#ul_item_" + uid + "").find(".chat_item_info p.msg").find("span").remove();
                    //绑定历史最新消息
                    var unreadhtml = "<span class='ng-binding' data-creatime='"
                        + message.CreateTime + "'>"
                      + message.content + "</span>";
                    //如果未读消息大于0
                    $("#ul_item_" + uid + "").find(".ext:eq(0)").text(getTime(message.CreateTime));
                    $("#ul_item_" + uid + "").find(".avatar .icon").addClass("web_wechat_reddot");
                    var unreadhtml = "<span class='ng-binding ng-scope unreadcount'>[1条]</span>" + unreadhtml;
                    $("#ul_item_" + uid + "").find(".chat_item_info p.msg").append(unreadhtml);
                    return;
                }

            }
            chatHub.client.errorPwd = function () {

                alert("用户名或密码错误！");

            }
            chatHub.client.OutLogin = function () {


                $.connection.hub.stop();
                alert("你的账号在别处登录，被迫下线！");
                location.reload();


            }

            chatHub.client.change = function (oldcid, newcid) {

                $("#" + oldcid + "").attr("id", newcid);

            }
            chatHub.client.updateCount = function (hitCount) {
                $("#counter div").html(hitCount);
            };

            chatHub.client.AppendLastMessage = function (list) {
                for (var i = 0; i < list.length; i++) {
                    $('#divChatWindow').prepend('<div class="message"><span class="userName">' + list[i].UserName + '</span>: ' + list[i].Message + '</div>');
                }
                var height = $('#divChatWindow')[0].scrollHeight;
                $('#divChatWindow').scrollTop(height);
                $('.waterfllow-loading.active').removeClass('active');
            }


            userHub.client.searchResultReceived = function (model) {
                $(".searchresult_info").show();
                $("#searchresult_avatar").attr("src", model.AvatarPic);
                $("#searchresult_uid").val(model.UserDetailId);
                $("#searchresult_name").text(model.UserName);

                if (model.IsOnline == true) { $("#searchresult_status").text("在线"); }
                else { $("#searchresult_status").text("离线"); }
                //‘添加好友’按钮激活
                $("#sendreply").removeAttr("disabled");

            }


            userHub.client.applySucceed = function (model) {

                //申请成功回调


                alert("已发送申请");
                $("#searchVal").val('');
                $("#hdUserName").attr("data-uid", '');
                $("#searchresult_uid").val('');
                $(".searchresult_info").css('display', 'none');


            }
        }

        function AddUser(id, name, avatarPic, IsOnline) {
            var str =
                   " <div data-uid=" + id + " class='chat_ul_item OffLine'id='ul_item_" + id + "'>" +
                        "<div class='ext'>" +
                            "<p class='attr ng-binding'>22:29</p>" +
                           " <p class='attr ng-scope'>" +
                               " <i class='web_wechat_no-remind'></i>" +
                            "</p>" +
                       " </div>" +
                        "<div class='avatar'>" +

                            "<img class='img gray' id='img_" + id + "' src='" + avatarPic + "' />" +

                            "<i class='icon ng-scope'></i>" +



                       " </div>" +
                        "<div class='chat_item_info'>" +
                            "<h3 class='nickname'>" +
                                "<span class='nickname_text ng-binding'>" + name + "</span>" +
                               "<p class='msg ng-scope'></p>" +
                            "</h3>" +

                           "</div></div>";





            if (IsOnline == true) {
                str = str.replace("class='img gray'", "class='img'");
                str = str.replace("chat_ul_item OffLine", "chat_ul_item OnLine");
            }
            //如果Id为applys说明是好友申请的消息
            if (id == "Applys") {
                str = str.replace("chat_ul_item OnLine", "apply_ul_item chat_ul_item OnLine");

                $(".chat_ul .chat_ul_div").prepend(str);
            }
            else { $(".chat_ul .chat_ul_div").append(str); }

        }

        function UserIsOnlined(id) {
            $("#img_" + id + "").removeClass("gray");
            var str = $("#ul_item_" + id + "").html();
            $("#ul_item_" + id + "").remove();

            str = "<div class='chat_ul_item'id='ul_item_" + id + "' data-uid='" + id + "'>" + str + "</div>";
            if ($(".chat_ul_item.OffLine").length != 0) { $(".chat_ul_item.OffLine").before(str); return; }
            if ($(".chat_ul_item.Online").length != 0) { $(".chat_ul_item.Onlie").after(str); return; }
            else { $(".chat_ul .chat_ul_div").append(str); }
        }
        function AddMessage(message) {
            var chatingid = $("#currentUserName").attr("data-uid");
            var src = $("#img_" + chatingid + "").attr("src");
            var bubble_default = "bubble_default";
            var me = "";
            var MyId = $("#hdUserName").attr("data-uid");
            //接收者id不等于我的Id，说明我是发送者
            if (message.SenderId.trim() == MyId.trim()) {
                src = $("#myheadsrc").attr("src");
                bubble_default = "bubble_primary ";
                me = "me";
            }
            //绑定聊天对话框消息，前端
            var str =
           " <div class='message_item message " + me + "' style=' margin-bottom: 16px; float: left; width: 100%;'>" +
                               " <p class='message_system ng-scope'>" +
                                " <span class='content ng-binding'>" + getTime(message.CreateTime, "") + "</span>" +
                              "</p>" +
                               " <img class='avatar' src='" + src + "' title='" + message.SenderName + "'>" +
                                "<div class='content'>" +
                                 "<div class='bubble js_message_bubble ng-scope " + bubble_default + " left'>" +
                                  "<div class='bubble_cont ng-scope'>" +
                                   "<div class='plain'>" +
                                    "            <pre class='js_message_plain ng-binding'>" + message.content + "</pre>" +
                                     " </div>" +
                                      "  </div</div></div></div>";
            $(".message_ul").append(str);
            //绑定好友列表出的聊天消息，前端
            if ($("#ul_item_" + message.RecevierId + "").find(".chat_item_info p.msg").find("span").length == 0) {

                var unreadhtml = "<span class='ng-binding' data-creatime='" + message.CreateTime + "'>"
                + message.content + "</span>";
                $("#ul_item_" + message.RecevierId + "").find(".chat_item_info p.msg").append(unreadhtml);
            }

        }

        function OpenPrivateChatWindow(chatHub, id, recevierName) {

            var ctrId = 'private_' + id;

            if ($('#' + ctrId).length > 0) return;

            createPrivateChatWindow(chatHub, id, ctrId, recevierName);

        }

        function createPrivateChatWindow(chatHub, userId, ctrId, recevierName) {

            var div = '<div id="' + ctrId + '" class="ui-widget-content draggable" rel="0">' +
                       '<div class="header">' +
                          '<div  style="float:right;">' +
                              '<img id="imgDelete"  style="cursor:pointer;" src="/Images/delete.png"/>' +
                           '</div>' +

                           '<span class="selText" rel="0">' + recevierName + '</span>' +
                       '</div>' +
                       '<div id="divMessage" class="messageArea">' +

                       '</div>' +
                       '<div class="buttonBar">' +
                          '<input id="txtPrivateMessage" class="msgText" type="text"   />' +
                          '<input id="btnSendMessage" class="submitButton button" type="button" value="Send"   />' +
                       '</div>' +
                    '</div>';

            var $div = $(div);

            // DELETE BUTTON IMAGE
            $div.find('#imgDelete').click(function () {
                $('#' + ctrId).remove();
            });



            // Text Box event
            $div.find("#txtPrivateMessage").keypress(function (e) {
                if (e.which == 13) {
                    $div.find("#btnSendMessage").click();
                }
            });

            AddDivToContainer($div);

        }

        function AddDivToContainer($div) {
            $('#divContainer').prepend($div);

            $div.draggable({

                handle: ".header",
                stop: function () {

                }
            });


        }

        function AddLastMessage(chatHub) {
            $(document).ready(function (chatHub) {


            });

        }
        function waterallowData() {
            $('.waterfllow-loading').addClass('active');

        }


        function getNum(text) {
            var value = text.replace(/[^0-9]/ig, "");
            return value;
        }

        function getTime(text, type) {
            var date = new Date(text);
            var year = date.getYear();
            var month = date.getMonth();
            var day = date.getDay();



            var hours = date.getHours();
            var minutes = date.getMinutes();
            var getSeconds = date.getSeconds();

            if (type == "ext") {
                return hours + ":" + minutes;

            }
            else {
                return month + "-" + day + " " + hours + ":" + minutes;

            }

        }
        function getTimeFromBackGroung(text, type) {
            var arr = text.split('T');
            if (arr.length <= 1) { return; }

            var date = arr[0];
            var dateArr = date.split('-');

            var year = dateArr[0];
            var month = dateArr[1];
            var day = dateArr[2];

            var time = arr[1];
            var timeArr = time.split(':');

            var hours = timeArr[0];
            var minutes = timeArr[1];
            var getSeconds = timeArr[2];


            if (type == "ext") {
                return hours + ":" + minutes;

            }
            else {
                return month + "-" + day + " " + hours + ":" + minutes;

            }

        }
        function bindingMsg(model) {
            var uid = model.Message.SenderId;
            //绑定历史最新消息
            var unreadhtml = "<span class='ng-binding' data-creatime='"
                + model.Message.CreateTime + "'>"
            + model.Message.content + "</span>";
            //如果未读消息大于0
            if (model.UnReadMsgCount > 0) {
                $("#ul_item_" + uid + "").find(".avatar .icon").addClass("web_wechat_reddot");
                var unreadhtml = "<span class='ng-binding ng-scope unreadcount'>[" + model.UnReadMsgCount + "条]</span>" + unreadhtml;
                $("#ul_item_" + uid + "").addClass("NeedGetMsgFromBack");
                $("#ul_item_" + uid + "").attr("data-unreadCount", model.UnReadMsgCount);
                $("#ul_item_" + uid + "").attr("data-unreadMsgId", model.Message.PrivateMessageId);
            }




            $("#ul_item_" + uid + "").find(".chat_item_info p.msg").append(unreadhtml);

        }

        function bindingApplys(FriendsApplys) {


            for (var i = 0; i < FriendsApplys.length; i++) {
                var item = FriendsApplys[i];
                var str =
                   "    <li style='' class='list-group-item'>" +
                   "       <div style='    display: inline-block;width: 50%;'>" +
                      "        <img class='reply-avatar' style=' width: 50px; display: block; float: left;   margin-right: 10px;' src='" + item.ApplyUserAvatar + "' />" +
                          "    <span class='reply-name' data-uid='" + item.ApplyUserId + "'data-applyid='" + item.FriendsApplyId + "' style='font-family:'微软雅黑','黑体','宋体'' ;padding-top 5px;display block;>" + item.ApplyUserName + "</span>" +
                           "   <span class='reply-datetime' style='display: block;font-family: '微软雅黑','黑体','宋体';padding-top: 5px;6font-size: 10px;'>" + getTimeFromBackGroung(item.ReplyTime, "") + "</span></div>" +

                      " <div class='btn-group  btn-group-sm' style='float: right;display:inline;padding-top: 11px;'>" +
                              "<button type='button' class='reply-pass btn btn-primary'>通过</button>" +
                            "  <button type='button' class='reply-refuse btn btn-danger'>拒绝</button>" +
                          "    <button type='button' class='reply-ignore btn btn-warning'>忽略</button>" +
                        "  </div>" +
                        "  <div style=' clear: both;'></div>" +
                     " </li>"
                ;

                //在选中元素之前插入元素
                $(".friendsApply").prepend(str);
            }





        }
        //废弃的
        function PushSeesionStorage(message) {
            var myId = $("#hdUserName").attr("data-uid");
            var key;
            //消息的接收者是自己
            if (myId.trim() == message.RecevierId.trim()) {
                key = "MessageListWith_" + message.SenderId;

            }
                // 消息的接收者是别人
            else {
                key = "MessageListWith_" + message.RecevierId;
            }


            //获得消息集合的字符串
            var listStr = sessionStorage.getItem(key);
            //定义一个消息数组
            var list = [];
            if (listStr != null) {
                // 将字符串反序列化为消息数组
                list = JSON.parse(listStr);
            }
            list.push(message);
            //将数组序列化为字符串
            listStr = JSON.stringify(list);

            sessionStorage.setItem(key, listStr);
        }

        function GetStrogeMessage(chatingId) {
            var key = key = "MessageListWith_" + chatingId;
            var str = sessionStorage.getItem(key);
            if (str != null) {
                var list = JSON.parse(str);
                for (var i = 0; i < list.length; i++) {

                    AddMessage(list[i]);

                }
            }
            return;
        }
        //重写PushSeesionStorage，将item添加到指定key的列表里
        function PushSeesionStorage(key, item) {

            //获得消息集合的字符串
            var listStr = sessionStorage.getItem(key);
            //定义一个消息数组
            var list = [];
            if (listStr != null) {
                // 将字符串反序列化为消息数组
                list = JSON.parse(listStr);
            }
            list.push(item);
            //将数组序列化为字符串
            listStr = JSON.stringify(list);

            sessionStorage.setItem(key, listStr);
        }

        function GetSeesionStorageList(key) {

            //获得消息集合的字符串
            var listStr = sessionStorage.getItem(key);
            //定义一个消息数组
            var list = [];
            if (listStr != null) {
                // 将字符串反序列化为消息数组
                list = JSON.parse(listStr);
            }
            return list;

        }

        function IsCurrentUserOrNotUser(e) {

            if ($(e).hasClass("apply_ul_item")) { return true; }
            if ($(e).attr("data-uid").trim() == $("#currentUserName").attr("data-uid")) { return true; }
        }
        var MessageList;
        var MessagePageIndex;

    </script>

    <script>

    </script>
</head>
<body>
    <div class="main" id="divChat">
        <div class="pannel">
            <div class="header" style="position: relative; height: 76px; width: 100%;">
                <div class="avatar">

                    <img id="myheadsrc" style="width: 100%;" src="Images/webwxgeticon.jpg" data-uid="" />
                </div>

                <div class="info">
                    <span style="color: #fff;" data-uid="" id="hdUserName"></span>
                    <a style="margin-left: 100px;">
                        <i class="web_wechat_add"></i>
                        <i class="web_wechat_addUser" id="AddUser"></i>
                    </a>
                </div>
            </div>
            <div class="search_bar">
                <i class="web_wechat_search"></i>
                <input class="frm_search ng-isolate-scope ng-pristine ng-valid" type="text" placeholder="搜索">
            </div>
            <div class="tab">
                <div class="tab_item">
                    <a class="chat" title="聊天" href="#">
                        <i class="web_wechat_tab_chat web_wechat_tab_chat_hl"></i>
                    </a>
                </div>
                <div class="tab_item ng-scope" ng-if="isShowReader">
                    <a class="chat" title="阅读" href="#">
                        <i class="web_wechat_tab_public"></i>
                    </a>
                </div>
                <div class="tab_item no_extra">
                    <a class="chat" title="通讯录" href="#">
                        <i class="web_wechat_tab_friends"></i>
                    </a>
                </div>
            </div>
            <div style=" margin-bottom: 0px; margin-right: 0px; height: 446px; overflow-y: auto;" class="chat_ul">
                <div class="ng-scope chat_ul_div">



                </div>
            </div>
        </div>
        <div class="right chat">
            <div class="panel panel-default" style="background-color: #eee;">
                <div id="currentUserName" data-uid="" class="panel-heading" style="text-align: center;">
                    Panel heading without title
                    <i class="web_wechat_down_icon"></i>
                </div>
                <div class="panel-body" style="padding-bottom: 0; height: 377px; overflow: auto;">
                    <div class="ng-scope">
                        <div class="message_ul">
                            <div class="message_item message" style=" margin-bottom: 16px; float: left; width: 100%;">
                                <p class="message_system ng-scope">
                                    <span class="content ng-binding">9:52</span>
                                </p>

                                <img class="avatar" src="Images/webwxgeticon%20(1).jpg" title="李思晓" />
                                <div class="content">

                                    <div class="bubble js_message_bubble ng-scope bubble_default left">
                                        <div class="bubble_cont ng-scope">
                                            <div class="plain">
                                                <pre class="js_message_plain ng-binding">。。</pre>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>







                            <div class="message_item message me" style=" margin-bottom: 16px; float: left; width: 100%;">
                                <p class="message_system ng-scope">
                                    <span class="content ng-binding">9:52</span>
                                </p>

                                <img class="avatar" src="Images/webwxgeticon%20(1).jpg" title="李思晓" />
                                <div class="content">

                                    <div class="bubble js_message_bubble ng-scope bubble_primary left">
                                        <div class="bubble_cont ng-scope">
                                            <div class="plain">
                                                <pre class="js_message_plain ng-binding">。。</pre>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box_ft ng-scope">
                    <div class="toolbar" id="tool_bar">
                        <a class="web_wechat_face" href="javascript:;" title="表情"></a>
                        <a class="web_wechat_screencut ng-isolate-scope" href="javascript:;" title="截屏"></a>

                    </div>
                    <div class="content ng-isolate-scope">
                        <pre id="txtPrivateMessage" class="flex edit_area ng-isolate-scope ng-pristine ng-valid" contenteditable="true"></pre>
                        <span class="caret_pos_helper" id="caretPosHelper"></span>
                    </div>
                    <div class="action">
                        <!-- ngIf: !isMacOS --><span ng-if="!isMacOS" class="desc ng-scope">按下Ctrl+Enter换行</span><!-- end ngIf: !isMacOS -->
                        <!-- ngIf: isMacOS -->
                        <a class="btn btn_send" href="javascript:;" ng-click="sendTextMessage()">发送</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="divLogin" class="login" style="margin: auto; width: 200px; margin-top: 100px;">
        <div>
            用户名:<br />
            <input id="txtNickName" type="text" class="textBox" />
        </div>
        <div>
            密码:<br />
            <input id="pwd" type="text" class="textBox" />
        </div>
        <div id="divButton">
            <input id="btnStartChat" type="button" class="submitButton" value="登录" />
        </div>
    </div>
    <div id="modal"></div>
</body>
</html>
